// Code generated by qtc from "layout.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line templates/layout.qtpl:1
package templates

//line templates/layout.qtpl:1
import "github.com/catatsuy/private-isu/webapp/golang/types"

//line templates/layout.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/layout.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/layout.qtpl:3
func StreamLayout(qw422016 *qt422016.Writer, content func() string, me types.User) {
//line templates/layout.qtpl:3
	qw422016.N().S(`
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Iscogram</title>
    <link href="/css/style.css" media="screen" rel="stylesheet" type="text/css">
  </head>
  <body>
    <div class="container">
      <div class="header">
        <div class="isu-title">
          <h1><a href="/">Iscogram</a></h1>
        </div>
        <div class="isu-header-menu">
          `)
//line templates/layout.qtpl:18
	if me.ID == 0 {
//line templates/layout.qtpl:18
		qw422016.N().S(`
          <div><a href="/login">ログイン</a></div>
          `)
//line templates/layout.qtpl:20
	} else {
//line templates/layout.qtpl:20
		qw422016.N().S(`
          <div><a href="/@`)
//line templates/layout.qtpl:21
		qw422016.E().S(me.AccountName)
//line templates/layout.qtpl:21
		qw422016.N().S(`"><span class="isu-account-name">`)
//line templates/layout.qtpl:21
		qw422016.E().S(me.AccountName)
//line templates/layout.qtpl:21
		qw422016.N().S(`</span>さん</a></div>
          `)
//line templates/layout.qtpl:22
		if me.Authority == 1 {
//line templates/layout.qtpl:22
			qw422016.N().S(`
          <div><a href="/admin/banned">管理者用ページ</a></div>
          `)
//line templates/layout.qtpl:24
		}
//line templates/layout.qtpl:24
		qw422016.N().S(`
          <div><a href="/logout">ログアウト</a></div>
          `)
//line templates/layout.qtpl:26
	}
//line templates/layout.qtpl:26
	qw422016.N().S(`
        </div>
      </div>

      `)
//line templates/layout.qtpl:30
	qw422016.N().S(content())
//line templates/layout.qtpl:30
	qw422016.N().S(`
    </div>
    <script src="/js/timeago.min.js"></script>
    <script src="/js/main.js"></script>
  </body>
</html>
`)
//line templates/layout.qtpl:36
}

//line templates/layout.qtpl:36
func WriteLayout(qq422016 qtio422016.Writer, content func() string, me types.User) {
//line templates/layout.qtpl:36
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/layout.qtpl:36
	StreamLayout(qw422016, content, me)
//line templates/layout.qtpl:36
	qt422016.ReleaseWriter(qw422016)
//line templates/layout.qtpl:36
}

//line templates/layout.qtpl:36
func Layout(content func() string, me types.User) string {
//line templates/layout.qtpl:36
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/layout.qtpl:36
	WriteLayout(qb422016, content, me)
//line templates/layout.qtpl:36
	qs422016 := string(qb422016.B)
//line templates/layout.qtpl:36
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/layout.qtpl:36
	return qs422016
//line templates/layout.qtpl:36
}
